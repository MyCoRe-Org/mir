<?xml version="1.0"?>
<ruleset name="Custom MyCoRe rules" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">

  <description>
    This ruleset contains custom MyCoRe rules
  </description>

  <rule name="MCR.SerialVersionUidAnnotation"
        language="java"
        message="The serialVersionUID should be annotated with @java.io.Serial"
        class="net.sourceforge.pmd.lang.rule.xpath.XPathRule">
    <priority>4</priority>
    <description>
      Field should look like this:

      @Serial
      private static final long serialVersionUID = 1L;
    </description>
    <properties>
      <property name="xpath">
        <value>
          <![CDATA[
            //ClassBody/FieldDeclaration
              [
                pmd-java:modifiers()='private'
                  and
                pmd-java:modifiers()='static'
                  and
                pmd-java:modifiers()='final'
                  and
                PrimitiveType[@Kind='long']
                  and
                VariableDeclarator/VariableId[@Name='serialVersionUID']
              ]
              [
                not(ModifierList/Annotation/ClassType[pmd-java:typeIs('java.io.Serial')])
              ]
          ]]>
        </value>
      </property>
    </properties>
  </rule>

  <rule name="MCR.SerialVersionUidValue"
        language="java"
        message="The serialVersionUID should have literal value '1L'"
        class="net.sourceforge.pmd.lang.rule.xpath.XPathRule">
    <priority>4</priority>
    <description>
      Field should look like this:

      @Serial
      private static final long serialVersionUID = 1L;
    </description>
    <properties>
      <property name="xpath">
        <value>
          <![CDATA[
            //ClassBody/FieldDeclaration
              [
                pmd-java:modifiers()='private'
                  and
                pmd-java:modifiers()='static'
                  and
                pmd-java:modifiers()='final'
                  and
                PrimitiveType[@Kind='long']
                  and
                VariableDeclarator/VariableId[@Name='serialVersionUID']
              ]
              [
                not(VariableDeclarator/NumericLiteral[@Image='1L'])
              ]
          ]]>
        </value>
      </property>
    </properties>
  </rule>

  <rule name="MCR.ResourceResolver"
        language="java"
        message="Resources should be accessed using MCRResourceResolver or MCRResourceHelper"
        class="net.sourceforge.pmd.lang.rule.xpath.XPathRule">
    <description>
      Accessing resources directly via Class, ClassLoader or ServletContext should only be done
      - in classes that are part of the setup of the MyCoRe application (e.g. MCRConfigurationInputStream, MCRComponent),
      - in classes that are used by MCRResourceResolver (e.g. MCRResourceProvider, MCRResourceLocator) or
      - in rare cases where module specific files need to be accessed (e.g. MCRCoreVersion accessing git.properties).
      Otherwise, MCRResourceResolver or MCRResourceHelper should be used.
    </description>
    <priority>1</priority>
    <properties>
      <property name="xpath">
        <value>
          <![CDATA[
            //(MethodCall|MethodReference)
              [*[position() = 1 and pmd-java:typeIs('java.lang.Class')]]
              [@MethodName=(
                'getResource',
                'getResourceAsStream'
              )]
              |
            //(MethodCall|MethodReference)
              [*[position() = 1 and pmd-java:typeIs('java.lang.ClassLoader')]]
              [@MethodName=(
                'resources',
                'getResource',
                'getResources',
                'getResourceAsStream'
              )]
              |
            //(MethodCall|MethodReference)
              [*[position() = 1 and pmd-java:typeIs('jakarta.servlet.ServletContext')]]
              [@MethodName=(
                'getResource',
                'getResourcePaths',
                'getResourceAsStream'
              )]
          ]]>
        </value>
      </property>
    </properties>
  </rule>

</ruleset>
